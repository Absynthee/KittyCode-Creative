---
interface Props {
  variant?:
    | "default"
    | "primary"
    | "secondary"
    | "info"
    | "success"
    | "warning"
    | "error";
  size?: "small" | "medium" | "large";
  name?: string;
  value?: string;
  checked?: boolean;
  disabled?: boolean;
  required?: boolean;
  class?: string;
  id?: string;
}

const {
  variant = "default",
  size = "medium",
  name,
  value,
  checked = false,
  disabled = false,
  required = false,
  class: className = "",
  id,
  ...rest
} = Astro.props;

const baseClasses = "switch-wrapper";
const variantClass = `switch--${variant}`;
const sizeClass = `switch--${size}`;
const disabledClass = disabled ? "switch--disabled" : "";

const classes = [baseClasses, variantClass, sizeClass, disabledClass, className]
  .filter(Boolean)
  .join(" ");
---

<label class={classes}>
  <input
    type="checkbox"
    {name}
    {value}
    {checked}
    {disabled}
    {required}
    {id}
    {...rest}
  />
  <div class="switch-track">
    <div class="switch-thumb"></div>
  </div>
  <slot />
</label>

<style>
  /* Base Switch Styles */
  .switch-wrapper {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    user-select: none;
    margin-block: var(--space-3xs);
    font-size: var(--step-0);
  }

  .switch-wrapper input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }

  .switch-track {
    position: relative;
    border-radius: 9999px;
    transition: all 0.2s ease;
    background: hsl(from var(--border) h s l / 0.3);
    border: 1px solid var(--border);
    display: flex;
    align-items: center;
    flex-shrink: 0;
  }

  .switch-thumb {
    border-radius: 9999px;
    background: var(--background);
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: 0 1px 3px hsl(from var(--foreground) h s l / 0.1);
    border: 1px solid hsl(from var(--border) h s l / 0.2);
  }

  .switch-wrapper:focus-within .switch-track {
    outline: 1px solid var(--Red);
    outline-offset: 1px;
  }

  .switch--disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Size Variants */
  .switch--small {
    font-size: var(--step--2);
    gap: 0.375rem;
  }

  .switch--small .switch-track {
    width: 2rem;
    height: 1.125rem;
    padding: 0.125rem;
  }

  .switch--small .switch-thumb {
    width: 0.875rem;
    height: 0.875rem;
    transform: translateX(0);
  }

  .switch--small input:checked + .switch-track .switch-thumb {
    transform: translateX(0.875rem);
  }

  .switch--medium {
    font-size: var(--step--1);
  }

  .switch--medium .switch-track {
    width: 2.5rem;
    height: 1.375rem;
    padding: 0.125rem;
  }

  .switch--medium .switch-thumb {
    width: 1.125rem;
    height: 1.125rem;
    transform: translateX(0);
  }

  .switch--medium input:checked + .switch-track .switch-thumb {
    transform: translateX(1.125rem);
  }

  .switch--large {
    font-size: var(--step-0);
  }

  .switch--large .switch-track {
    width: 3rem;
    height: 1.625rem;
    padding: 0.125rem;
  }

  .switch--large .switch-thumb {
    width: 1.375rem;
    height: 1.375rem;
    transform: translateX(0);
  }

  .switch--large input:checked + .switch-track .switch-thumb {
    transform: translateX(1.375rem);
  }

  /* Style Variants */
  .switch--default input:checked + .switch-track {
    background: hsl(from var(--primary) h s l / 0.15);
    border-color: hsl(from var(--border) h s l / 0.2);
    backdrop-filter: blur(12px);
  }

  .switch--default input:checked + .switch-track .switch-thumb {
    background: var(--foreground);
  }

  .switch--primary input:checked + .switch-track {
    background: var(--primary);
    border-color: var(--primary);
  }

  .switch--primary input:checked + .switch-track .switch-thumb {
    background: var(--primary-foreground);
  }

  .switch--secondary input:checked + .switch-track {
    background: var(--secondary);
    border-color: var(--secondary);
  }

  .switch--secondary input:checked + .switch-track .switch-thumb {
    background: var(--secondary-foreground);
  }

  .switch--info input:checked + .switch-track {
    background: var(--info);
    border-color: var(--info);
  }

  .switch--info input:checked + .switch-track .switch-thumb {
    background: var(--white);
  }

  .switch--success input:checked + .switch-track {
    background: var(--success);
    border-color: var(--success);
  }

  .switch--success input:checked + .switch-track .switch-thumb {
    background: var(--white);
  }

  .switch--warning input:checked + .switch-track {
    background: var(--warning);
    border-color: var(--warning);
  }

  .switch--warning input:checked + .switch-track .switch-thumb {
    background: var(--black);
  }

  .switch--error input:checked + .switch-track {
    background: var(--error);
    border-color: var(--error);
  }

  .switch--error input:checked + .switch-track .switch-thumb {
    background: var(--white);
  }

  /* Hover Effects */
  .switch-wrapper:hover:not(.switch--disabled) .switch-track {
    border-color: hsl(from var(--border) h s l / 0.6);
  }

  .switch--primary:hover:not(.switch--disabled) input:checked + .switch-track {
    background: hsl(from var(--primary) h s l / 0.8);
  }

  .switch--secondary:hover:not(.switch--disabled)
    input:checked
    + .switch-track {
    background: hsl(from var(--secondary) h s l / 0.8);
  }

  .switch--info:hover:not(.switch--disabled) input:checked + .switch-track {
    background: hsl(from var(--info) h s l / 0.8);
  }

  .switch--success:hover:not(.switch--disabled) input:checked + .switch-track {
    background: hsl(from var(--success) h s l / 0.8);
  }

  .switch--warning:hover:not(.switch--disabled) input:checked + .switch-track {
    background: hsl(from var(--warning) h s l / 0.8);
  }

  .switch--error:hover:not(.switch--disabled) input:checked + .switch-track {
    background: hsl(from var(--error) h s l / 0.8);
  }

  /* Responsive adjustments */
  @media screen and (max-width: 768px) {
    .switch--large {
      font-size: var(--step--1);
    }
  }
</style>
