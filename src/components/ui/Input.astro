---
export interface Props {
  variant?:
    | "default"
    | "primary"
    | "secondary"
    | "info"
    | "success"
    | "warning"
    | "error";
  size?: "small" | "medium" | "large";
  type?: "text" | "email" | "password" | "number" | "tel" | "url" | "search";
  placeholder?: string;
  value?: string;
  name?: string;
  id?: string;
  disabled?: boolean;
  required?: boolean;
  readonly?: boolean;
  class?: string;
}

const {
  variant = "default",
  size = "medium",
  type = "text",
  placeholder,
  value,
  name,
  id,
  disabled = false,
  required = false,
  readonly = false,
  class: className = "",
  ...rest
} = Astro.props;

const baseClasses = "input";
const variantClass = `input--${variant}`;
const sizeClass = `input--${size}`;
const disabledClass = disabled ? "input--disabled" : "";
const readonlyClass = readonly ? "input--readonly" : "";

const classes = [
  baseClasses,
  variantClass,
  sizeClass,
  disabledClass,
  readonlyClass,
  className,
]
  .filter(Boolean)
  .join(" ");
---

<input
  {type}
  {placeholder}
  {value}
  {name}
  {id}
  {disabled}
  {required}
  {readonly}
  class={classes}
  {...rest}
/>

<style>
  /* Base Input Styles */
  .input {
    display: inline-flex;
    align-items: center;
    width: 100%;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    background: var(--background);
    color: var(--foreground);
    font-size: var(--step-0);
    font-weight: 400;
    transition: all 0.2s ease;
    outline: none;
    margin-block: var(--space-3xs);
  }

  .input::placeholder {
    color: hsl(from var(--foreground) h s l / 0.5);
  }

  .input:hover {
    border-color: hsl(from var(--border) h s l / 0.8);
  }

  .input:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px hsl(from var(--primary) h s l / 0.2);
  }

  .input:focus-visible {
    outline: 2px solid var(--Red);
    outline-offset: 2px;
  }

  .input--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: hsl(from var(--background) h s l / 0.5);
  }

  .input--disabled:hover {
    border-color: var(--border);
  }

  .input--readonly {
    background: hsl(from var(--background) h s l / 0.8);
    cursor: default;
  }

  /* Size Variants */
  .input--small {
    padding: 0.375rem 0.75rem;
    font-size: var(--step--2);
    line-height: var(--space-m);
    min-height: 2rem;
  }

  .input--medium {
    padding: 0.5rem 1rem;
    font-size: var(--step--1);
    line-height: var(--space-m);
    min-height: 2.5rem;
  }

  .input--large {
    padding: 0.75rem 1.5rem;
    font-size: var(--step-0);
    line-height: var(--space-m);
    min-height: 3rem;
  }

  /* Style Variants */
  .input--default {
    background: hsl(from var(--primary) h s l / 0.05);
    border-color: hsl(from var(--border) h s l / 0.3);
  }

  .input--default:focus {
    background: var(--background);
    border-color: var(--primary);
    box-shadow: 0 0 0 2px hsl(from var(--primary) h s l / 0.15);
  }

  .input--primary {
    border-color: var(--primary);
  }

  .input--primary:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px hsl(from var(--primary) h s l / 0.2);
  }

  .input--secondary {
    border-color: var(--secondary);
  }

  .input--secondary:focus {
    border-color: var(--secondary);
    box-shadow: 0 0 0 2px hsl(from var(--secondary) h s l / 0.2);
  }

  .input--info {
    border-color: var(--info);
  }

  .input--info:focus {
    border-color: var(--info);
    box-shadow: 0 0 0 2px hsl(from var(--info) h s l / 0.2);
  }

  .input--success {
    border-color: var(--success);
  }

  .input--success:focus {
    border-color: var(--success);
    box-shadow: 0 0 0 2px hsl(from var(--success) h s l / 0.2);
  }

  .input--warning {
    border-color: var(--warning);
  }

  .input--warning:focus {
    border-color: var(--warning);
    box-shadow: 0 0 0 2px hsl(from var(--warning) h s l / 0.2);
  }

  .input--error {
    border-color: var(--error);
  }

  .input--error:focus {
    border-color: var(--error);
    box-shadow: 0 0 0 2px hsl(from var(--error) h s l / 0.2);
  }

  /* Responsive adjustments */
  @media screen and (max-width: 768px) {
    .input--large {
      padding: 0.625rem 1.25rem;
      min-height: 2.75rem;
    }
  }
</style>
