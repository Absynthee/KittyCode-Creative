---
export interface Props {
  variant?:
    | "default"
    | "primary"
    | "secondary"
    | "info"
    | "success"
    | "warning"
    | "error";
  size?: "small" | "medium" | "large";
  name?: string;
  value?: string;
  checked?: boolean;
  disabled?: boolean;
  required?: boolean;
  class?: string;
  id?: string;
}

const {
  variant = "default",
  size = "medium",
  name,
  value,
  checked = false,
  disabled = false,
  required = false,
  class: className = "",
  id,
  ...rest
} = Astro.props;

const baseClasses = "checkbox-wrapper";
const variantClass = `checkbox--${variant}`;
const sizeClass = `checkbox--${size}`;
const disabledClass = disabled ? "checkbox--disabled" : "";

const classes = [baseClasses, variantClass, sizeClass, disabledClass, className]
  .filter(Boolean)
  .join(" ");
---

<label class={classes}>
  <input
    type="checkbox"
    {name}
    {value}
    {checked}
    {disabled}
    {required}
    {id}
    {...rest}
  />
  <div class="checkbox-box">
    <svg
      class="checkmark"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="3"
    >
      <path d="M4 12L9 17L20 6"></path>
    </svg>
  </div>
  <slot />
</label>

<style>
  /* Base Checkbox Styles */
  .checkbox-wrapper {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    user-select: none;
    margin-block: var(--space-3xs);
    font-size: var(--step--1);
  }

  .checkbox-wrapper input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }

  .checkbox-box {
    position: relative;
    border: 1px solid hsl(from var(--primary) h s l / 0.5);
    border-radius: 0.35rem;
    background: transparent;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .checkbox-wrapper input:focus-visible + .checkbox-box {
    outline: 2px solid var(--Red);
    outline-offset: 2px;
  }

  .checkmark {
    opacity: 1;
    transform: scale(1);
    stroke-dasharray: 24;
    stroke-dashoffset: 24;
    transition: stroke-dashoffset 0.3s ease-out;
  }

  .checkbox-wrapper input:checked + .checkbox-box .checkmark {
    stroke-dashoffset: 0;
  }

  .checkbox--disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Size Variants */
  .checkbox--small .checkbox-box {
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
  }

  .checkbox--small {
    font-size: var(--step--2);
    gap: 0.375rem;
  }

  .checkbox--medium .checkbox-box {
    width: 1.25rem;
    height: 1.25rem;
  }

  .checkbox--medium {
    font-size: var(--step--1);
  }

  .checkbox--large .checkbox-box {
    width: 1.5rem;
    height: 1.5rem;
  }

  .checkbox--large {
    font-size: var(--step-0);
  }

  /* Style Variants */
  .checkbox--default input:checked + .checkbox-box {
    background: hsl(from var(--primary) h s l / 0.15);
    border-color: hsl(from var(--border) h s l / 0.2);
    backdrop-filter: blur(12px);
    color: var(--foreground);
  }

  .checkbox--default input:checked + .checkbox-box:hover {
    background: hsl(from var(--primary) h s l / 0.1);
  }

  .checkbox--primary input:checked + .checkbox-box {
    background: var(--primary);
    border-color: var(--primary);
    color: var(--primary-foreground);
  }

  .checkbox--primary input:checked + .checkbox-box:hover {
    background: hsl(from var(--primary) h s l / 0.8);
  }

  .checkbox--secondary input:checked + .checkbox-box {
    background: var(--secondary);
    border-color: var(--secondary);
    color: var(--secondary-foreground);
  }

  .checkbox--secondary input:checked + .checkbox-box:hover {
    background: hsl(from var(--secondary) h s l / 0.8);
  }

  .checkbox--info input:checked + .checkbox-box {
    background: var(--info);
    border-color: var(--info);
    color: var(--white);
  }

  .checkbox--info input:checked + .checkbox-box:hover {
    background: hsl(from var(--info) h s l / 0.8);
  }

  .checkbox--success input:checked + .checkbox-box {
    background: var(--success);
    border-color: var(--success);
    color: var(--white);
  }

  .checkbox--success input:checked + .checkbox-box:hover {
    background: hsl(from var(--success) h s l / 0.8);
  }

  .checkbox--warning input:checked + .checkbox-box {
    background: var(--warning);
    border-color: var(--warning);
    color: var(--black);
  }

  .checkbox--warning input:checked + .checkbox-box:hover {
    background: hsl(from var(--warning) h s l / 0.8);
  }

  .checkbox--error input:checked + .checkbox-box {
    background: var(--error);
    border-color: var(--error);
    color: var(--white);
  }

  .checkbox--error input:checked + .checkbox-box:hover {
    background: hsl(from var(--error) h s l / 0.8);
  }

  /* Responsive adjustments */
  @media screen and (max-width: 768px) {
    .checkbox--large .checkbox-box {
      width: 1.375rem;
      height: 1.375rem;
    }
  }
</style>
