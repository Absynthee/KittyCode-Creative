---
import Button from "@/components/ui/Button.astro";
import Card from "@/components/ui/Card.astro";
import { Image } from "astro:assets";

import Kitty from "@/assets/images/kitty.gif";

interface Props {
  name: string;
  role?: string;
  tagline?: string;
  bio?: string;
  primaryCTA?: {
    text: string;
    href: string;
    variant?: "default" | "primary" | "secondary" | "outline" | "ghost";
  };
  secondaryCTA?: {
    text: string;
    href: string;
    variant?: "default" | "primary" | "secondary" | "outline" | "ghost";
  };
  class?: string;
}

const { name, role, tagline, bio, primaryCTA, secondaryCTA } = Astro.props;
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    import("@/lib/sparkly-text.js");
  });
</script>

<section id="hero" class="hero hero--fullwidth" aria-labelledby="hero-title">
  <div class="hero-container">
    <div class="hero-content">
      <div class="hero-intro">
        <Image
          class="typing-cat"
          src={Kitty}
          alt="Hero Background"
          height={400}
          width={400}
          loading="eager"
        />
        <!-- <div class="role-container">
          <sparkly-text
            number-of-sparkles="5"
            style="--sparkly-text-color: color-mix(in srgb, currentColor, var(--primary) 100%);"
          >
            <span class="hero-role">{role}</span>
          </sparkly-text>
        </div> -->

        <h1 class="hero-name" id="hero-title">{name}</h1>

        <p class="hero-bio">{bio}</p>
      </div>

      {
        (primaryCTA || secondaryCTA) && (
          <div class="hero-actions">
            {primaryCTA && (
              <Button
                href={primaryCTA.href}
                variant={primaryCTA.variant || "primary"}
                size="large"
              >
                {primaryCTA.text}
              </Button>
            )}

            {secondaryCTA && (
              <Button
                href={secondaryCTA.href}
                variant={secondaryCTA.variant || "outline"}
                size="large"
              >
                {secondaryCTA.text}
              </Button>
            )}
          </div>
        )
      }

      <!-- <div class="cards">
        <Card
          variant="secondary"
          title="9+"
          description="years experience"
          size="medium"
        />
        <Card
          variant="secondary"
          title="15+"
          description="projects completed"
          size="medium"
        />
        <Card
          variant="secondary"
          title="100%"
          description="client satisfaction"
          size="medium"
        />
      </div> -->
    </div>
  </div>

  <style>
    .hero {
      position: relative;
      overflow: hidden;
      /* max-width: 1200px; */
    }

    .hero--fullwidth {
      width: 100%;
      margin: 0 auto;
      min-height: calc(100vh - 332px);
      display: flex;
      align-items: center;
      justify-content: center;
      /* background: radial-gradient(
          ellipse at top,
          hsla(22, 95%, 39%, 0.1) 0%,
          transparent 60%
        ),
        radial-gradient(
          ellipse at bottom right,
          hsl(from var(--background) h s l / 0.03) 0%,
          transparent 60%
        ); */
    }

    .typing-cat {
      place-self: center;
      animation: slideInDown 0.8s ease-out 0.2s both;
      user-select: none;
    }

    .hero-container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 6rem 3rem;
      position: relative;
      z-index: 10;
    }

    .hero-content {
      text-align: center;
      max-width: 1000px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 3rem;
      padding-block: 3rem;
    }

    .hero-intro {
      display: flex;
      flex-direction: column;
      /* gap: 2rem; */
    }

    .hero-name {
      color: var(--foreground);
      font-size: calc(var(--step-4) * 2);
      /* letter-spacing: 0.04em; */
      background: linear-gradient(
        135deg,
        var(--secondary) 0%,
        var(--primary) 30%,
        var(--primary) 60%,
        var(--secondary) 100%
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 300% 300%;
      padding-top: 1rem;
      padding-bottom: 2rem;

      animation:
        gradientShift 20s ease-in-out infinite,
        slideInUp 0.8s ease-out 0.3s both;
    }

    .hero-tagline {
      font-size: var(--step-1);
      font-weight: 500;
      color: hsl(from var(--foreground) h s l / 0.8);
      line-height: 1.4;
      max-width: 62ch;
      text-wrap: balance;
      margin: 0 auto;
      animation: fadeInUp 0.8s ease-out 0.6s both;
      padding-bottom: 2rem;
    }

    .hero-bio {
      font-size: var(--step-0);
      color: hsl(from var(--foreground) h s l / 0.8);
      max-width: 75ch;
      margin: 0 auto;
      animation: fadeInUp 0.8s ease-out 0.8s both;
    }

    .hero-actions {
      display: flex;
      gap: 2rem;
      justify-content: center;
      flex-wrap: wrap;
      animation: fadeInUp 0.8s ease-out 1.4s both;
    }

    .cards {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      text-transform: uppercase;
      justify-content: center;

      .card {
        --delay: 2s;
        width: 250px;
        animation: scaleIn 0.6s ease-out var(--delay) both;
        transition: all 0.4s ease;

        &:nth-child(2) {
          --delay: 2.5s;
        }
        &:nth-child(3) {
          --delay: 3s;
        }

        &:hover {
          border-color: hsl(from var(--primary) h s l / 0.2);
        }

        h4 {
          font-family: "Inter";
          font-size: var(--step-2);
          font-weight: 800;
          color: hsl(from var(--primary) h s l / 0.9);
          line-height: 1;
        }
      }

      .card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 1px;
        background: linear-gradient(
          90deg,
          transparent,
          hsl(from var(--primary) h s l / 0.4),
          transparent
        );
        animation: shimmer 4s ease-in-out infinite;
      }

      .card p {
        font-size: var(--step--2);
        color: hsl(from var(--foreground) h s l / 0.6);
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.1em;
      }
    }

    /* Animations */
    @keyframes gradientShift {
      0%,
      100% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
    }

    @keyframes slideInDown {
      from {
        opacity: 0;
        transform: translateY(-30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes scaleIn {
      from {
        opacity: 0;
        transform: scale(0.9);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    @keyframes shimmer {
      0%,
      100% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }
    }

    /* Responsive design */
    @media screen and (max-width: 1200px) {
      .hero-container {
        padding: 4rem 2rem;
      }

      .hero-content {
        max-width: 900px;
      }
    }

    @media screen and (max-width: 768px) {
      .hero-container {
        padding: 2rem 1rem 8rem 1rem;
      }

      .hero-content {
        gap: 2.5rem;
      }

      .hero-name {
        font-size: var(--step-6);
      }

      .hero-actions {
        gap: var(--space-2xs);
      }

      .hero-tagline {
        font-size: var(--step-0);
      }

      .hero-actions {
        align-items: center;
      }

      .hero-actions :global(.btn) {
        max-width: 300px;
      }

      .cards {
        align-items: center;
        gap: var(--space-3xs);
      }

      .cards {
        .card {
          min-width: 205px;
          width: unset;
          padding: 1.5rem 1rem;
          margin: var(--space-3xs);
        }

        .card::before {
          animation: none;
        }
      }
    }

    @media screen and (max-width: 480px) {
      .hero-container {
        padding: 2rem 1rem;
      }

      .hero-content {
        padding-bottom: 10rem;
      }

      .hero-bio {
        line-height: 1.4;
      }

      .cards {
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
      }

      .cards {
        .card {
          min-width: 200px;
          padding: 1rem 0.75rem;
        }
      }
    }
  </style>
</section>
